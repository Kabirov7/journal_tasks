{"version":3,"sources":["Components/InstantSearch/Hit.js","Components/InstantSearch/InstantSearch.js","App.js","reportWebVitals.js","index.js"],"names":["useStyles","makeStyles","theme","link","margin","padding","fontFamily","fontWeight","fontSize","textTransform","preStyle","display","overflow","Hit","props","classes","item","require","hit","map","key","style","paddingTop","textAlign","dataObject","className","target","href","objectID","searchClient","algoliasearch","initIndex","container","width","gridTemplateColumns","header","MyInstantSearch","InstantSearch","indexName","RefinementList","attribute","SearchBox","Hits","hitComponent","Pagination","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"oTAGMA,EAAYC,aAAW,SAACC,GAAD,YAAY,CACxCC,MAAI,GACHC,OAAQ,EACRC,QAAS,gBACTC,WAAY,SACZC,WAAY,IACZC,SAAU,GACVC,cAAe,aANZ,cAOF,2BAA6B,CAC7BD,SAAU,KARR,cAUF,2BAA6B,CAC7BA,SAAU,KAXR,cAaF,2BAA6B,CAC7BA,SAAU,KAdR,GAiBJE,SAAU,CACTC,QAAS,QACTP,OAAQ,IACRQ,SAAU,cAsBGC,EAjBH,SAACC,GACZ,IAAMC,EAAUf,IAGZgB,GAFkBC,EAAQ,IAEnBH,EAAMI,KAGjB,MAJwB,CAAC,mBAAoB,UAG7BC,KAAI,SAAAC,GAAG,cAAWJ,EAAKI,MAEtC,sBAAKC,MAAO,CAACC,WAAY,GAAIC,UAAW,QAAxC,UACC,cAAC,IAAD,CAAgBC,WAAYR,IAC5B,qBAAKS,UAAWV,EAAQZ,KAAxB,SACC,mBAAGuB,OAAO,SAASC,KAAM,4CAA8CX,EAAKY,SAA5E,wBC1BEC,EAAeC,IAAc,aAAc,oCAI3C9B,GAHQ6B,EAAaE,UAAU,sBAGnB9B,aAAW,SAACC,GAAD,YAAY,CACxC8B,UAAU,aACTrB,QAAS,OACTP,OAAQ,SACR6B,MAAO,MACPC,oBAAqB,UAErBX,UAAW,QACV,2BAA6B,CAC7BW,oBAAqB,QAGvBC,QAAM,GACL/B,OAAQ,EACRC,QAAS,EACTC,WAAY,SACZC,WAAY,IACZC,SAAU,GACVC,cAAe,aANV,cAOJ,2BAA6B,CAC7BD,SAAU,KARN,cAUJ,2BAA6B,CAC7BA,SAAU,KAXN,cAaJ,2BAA6B,CAC7BA,SAAU,KAdN,QAwCQ4B,EAtBS,WACvB,IAAMrB,EAAUf,IAEhB,OACC,eAACqC,EAAA,EAAD,CAAeR,aAAcA,EAAcS,UAAU,qBAArD,UACC,sBAAKb,UAAWV,EAAQiB,UAAxB,UACC,gCACC,oBAAIP,UAAWV,EAAQoB,OAAvB,2BACA,cAACI,EAAA,EAAD,CAAgBC,UAAU,qBAE3B,gCACC,oBAAIf,UAAWV,EAAQoB,OAAvB,uBACA,cAACI,EAAA,EAAD,CAAgBC,UAAU,oBAG5B,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,aAAc9B,IACnB,cAAC+B,EAAA,EAAD,QCtDWC,MARf,WACE,OACE,qBAAKpB,UAAU,MAAf,SACA,cAAC,EAAD,OCMWqB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.bd403a91.chunk.js","sourcesContent":["import {makeStyles} from \"@material-ui/core\";\nimport ReactJsonPrint from 'react-json-print'\n\nconst useStyles = makeStyles((theme) => ({\n\tlink: {\n\t\tmargin: 0,\n\t\tpadding: \"15px 0 5px 0 \",\n\t\tfontFamily: \"Roboto\",\n\t\tfontWeight: 300,\n\t\tfontSize: 20,\n\t\ttextTransform: \"uppercase\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tfontSize: 18\n\t\t},\n\t\t['@media (max-width:500px)']: {\n\t\t\tfontSize: 16\n\t\t},\n\t\t['@media (max-width:350px)']: {\n\t\t\tfontSize: 15\n\t\t}\n\t},\n\tpreStyle: {\n\t\tdisplay: 'block',\n\t\tmargin: '0',\n\t\toverflow: 'scroll',\n\t},\n}));\n\n\nconst Hit = (props) => {\n\tconst classes = useStyles()\n\tconst JSONPrettyMon = require('react-json-pretty/dist/monikai');\n\tconst unnecessaryKeys = [\"_highlightResult\", \"source\"]\n\tlet item = props.hit\n\n\tunnecessaryKeys.map(key => delete item[key])\n\treturn (\n\t\t<div style={{paddingTop: 50, textAlign: \"left\"}}>\n\t\t\t<ReactJsonPrint dataObject={item} />\n\t\t\t<div className={classes.link}>\n\t\t\t\t<a target=\"_blank\" href={\"https://kloopmedia.github.io/Journal/#/t/\" + item.objectID}>link</a>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Hit","import {\n\tInstantSearch,\n\tHits,\n\tSearchBox,\n\tPagination,\n\tHighlight,\n\tClearRefinements,\n\tRefinementList,\n\tConfigure,\n} from 'react-instantsearch-dom';\nimport algoliasearch from 'algoliasearch';\nimport Hit from \"./Hit\";\nimport {makeStyles} from \"@material-ui/core\";\n\nconst searchClient = algoliasearch('ELABUQVDZN', '486f9b7db86446b1cdce57f9e8004cd9');\nconst index = searchClient.initIndex('prod_JOURNAL_TASKS');\n\n\nconst useStyles = makeStyles((theme) => ({\n\tcontainer: {\n\t\tdisplay: \"grid\",\n\t\tmargin: \"0 auto\",\n\t\twidth: \"90%\",\n\t\tgridTemplateColumns: \"1fr 1fr\",\n\n\t\ttextAlign: \"left\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tgridTemplateColumns: \"1fr\",\n\t\t},\n\t},\n\theader: {\n\t\tmargin: 0,\n\t\tpadding: 0,\n\t\tfontFamily: \"Roboto\",\n\t\tfontWeight: 700,\n\t\tfontSize: 24,\n\t\ttextTransform: \"uppercase\",\n\t\t['@media (max-width:780px)']: {\n\t\t\tfontSize: 22\n\t\t},\n\t\t['@media (max-width:500px)']: {\n\t\t\tfontSize: 20\n\t\t},\n\t\t['@media (max-width:350px)']: {\n\t\t\tfontSize: 19\n\t\t}\n\t}\n}));\nconst MyInstantSearch = () => {\n\tconst classes = useStyles()\n\n\treturn (\n\t\t<InstantSearch searchClient={searchClient} indexName=\"prod_JOURNAL_TASKS\">\n\t\t\t<div className={classes.container}>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className={classes.header}>case_stage_id</h2>\n\t\t\t\t\t<RefinementList attribute=\"case_stage_id\"/>\n\t\t\t\t</div>\n\t\t\t\t<div>\n\t\t\t\t\t<h2 className={classes.header}>case_type</h2>\n\t\t\t\t\t<RefinementList attribute=\"case_type\"/>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<SearchBox/>\n\t\t\t<Hits hitComponent={Hit}/>\n\t\t\t\t<Pagination/>\n\t\t</InstantSearch>\n\t);\n}\n\nexport default MyInstantSearch;","import './App.css';\nimport MyInstantSearch from \"./Components/InstantSearch/InstantSearch\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n    <MyInstantSearch/>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}